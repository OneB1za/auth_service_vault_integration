# Generated by Django 4.2.5 on 2024-08-24 21:10

import django.core.validators
from django.db import migrations, models
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=64, unique=True, verbose_name='Электронная почта')),
                ('username', models.CharField(max_length=48, verbose_name='Имя пользователя')),
                ('first_name', models.CharField(max_length=48, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=48, verbose_name='Фамилия')),
                ('gender', models.CharField(choices=[('1', 'Male'), ('2', 'Female')], max_length=1, verbose_name='Гендер')),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Возраст')),
                ('city', models.CharField(max_length=48, verbose_name='Город')),
                ('bio', models.TextField(blank=True, max_length=1000, null=True)),
                ('data_joined', models.DateTimeField(auto_now_add=True, verbose_name='Зарегистрирован')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('is_active', models.BooleanField(default=True, verbose_name='Состояние аккаунта')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
    ]
